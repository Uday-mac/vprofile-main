---
- hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: import vpc variables
      include_vars: vpc_setup

    - name: create a VPC 
      amazon.aws.ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpc_cidr}}"
        region: "{{region}}"
        tenancy: dedicated
        dns_support: true
        dns_hostnames: true
        state: "{{state}}"
        tags:
          Name: "{{vpc_name}}"
      register: vpcout
    
    - name: Create public subnet 1 in zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pub_sub1}}"
        az: "{{zone1}}"
        region: "{{region}}"
        map_public: true
        state: "{{state}}"
        tags:
          Name: pubsub1
      register: pubsub1_out
    
    - name: Create public subnet 2 in zone2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pub_sub2}}"
        az: "{{zone2}}"
        region: "{{region}}"
        map_public: true
        state: "{{state}}"
        tags:
          Name: pubsub2
      register: pubsub2_out

    - name: Create public subnet 3 in zone3
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pub_sub3}}"
        az: "{{zone3}}"
        region: "{{region}}"
        map_public: true
        state: "{{state}}"
        tags:
          Name: pubsub3
      register: pubsub3_out

    - name: Create private subnet 1 in zone1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pir_sub1}}"
        az: "{{zone1}}"
        region: "{{region}}"
        map_public: true
        state: "{{state}}"
        tags:
          Name: pirsub1
      register: pirsub1_out
    
    - name: Create private subnet 2 in zone2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pir_sub2}}"
        az: "{{zone2}}"
        region: "{{region}}"
        map_public: true
        state: "{{state}}"
        tags:
          Name: pirsub2
      register: pirsub2_out

    - name: Create private subnet 3 in zone3
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pir_sub3}}"
        az: "{{zone3}}"
        region: "{{region}}"
        map_public: true
        state: "{{state}}"
        tags:
          Name: pirsub3
      register: pirsub3_out

    - name: Create Internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: vprofile-igw
      register: igwout

    - name: Set up public subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igwout.gateway_id }}"
        tags:
          Name: vprofile-publicRT
      register: pubRT_out

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      amazon.aws.ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: true
        region: "{{region}}"
        if_exist_do_not_create: true
      register: natgw_out

    - name: Set up private subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        subnets:
          - "{{ pirsub1_out.subnet.id }}"
          - "{{ pirsub2_out.subnet.id }}"
          - "{{ pirsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ natgw_out.nat_gateway_id }}"
        tags:
          Name: vprofile-pirRT
      register: pirRT_out
